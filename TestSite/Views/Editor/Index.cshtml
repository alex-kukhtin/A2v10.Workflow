@model List<dynamic>
@{
	Layout = "_Layout_Editor";
	ViewData["Title"] = "Editor";
}

<div id="canvas">
</div>
<div class="properties-panel-parent" id="js-properties-panel">
</div>
<ul class="bpmn-editor-toolbar">
	<li>
		<button class="btn btn-sm btn-outline-primary" id="tb-save">Save</button>
		<button class="btn btn-sm btn-outline-primary" id="tb-download">Console</button>
		<a class="btn btn-sm btn-outline-primary" id="tb-fromdb" href="/workflow/download/@ViewBag.Id">Download</a>
		<input type="file" id="tb-upload">
	</li>
</ul>


@section Scripts {
<script src="~/js/dist/bpmn-editor.min.js"></script>
<script>
	let bpmnModeler = window.Modeler;
	let id = '@ViewBag.Id';
	fetch(`/Editor/Get/${id}`).then(resp => {
		resp.text().then(text => {
			bpmnModeler.importXML(text);
		});
	});

	document.getElementById('tb-download').addEventListener('click', (ev) => {
		ev.preventDefault();
		ev.stopPropagation();
		bpmnModeler.saveXML({ format: true }).then(result => {
			console.info(result.xml);
			alert('see console');
		});
	});

	window.addEventListener("beforeunload", function (ev) {
		let cs = bpmnModeler.get("commandStack");
		if (cs.canUndo()) {
			ev.preventDefault();
			event.returnValue = ''; // chrome
		}
	});

	document.getElementById('tb-upload').addEventListener('change', ev => {
		ev.preventDefault();
		ev.stopPropagation();
		let files = ev.target.files;
		if (!files.length) return;
		let file = files[0];
		let fr = new FileReader();
		fr.onload = function (e) {
			let text = e.target.result;
			bpmnModeler.importXML(text);
		};
		fr.readAsText(file);
	});

	document.getElementById('tb-save').addEventListener('click', ev => {
		ev.preventDefault();
		ev.stopPropagation();
		if (!id)
			id = prompt('enter workflow id');
		bpmnModeler.saveXML({ format: true }).then(result => {
			var fd = new FormData();
			fd.append('content', result.xml);
			var rq = new XMLHttpRequest();
			rq.onload = (ev) => {
				if (rq.status === 200) {
					bpmnModeler.get("commandStack").clear();
					window.location.replace(`/editor/index/${id}`);
				} else {
					alert('save failed');
				}
			};
			rq.open("POST", `/editor/set/${id}`);
			rq.send(fd);
		});
	});
</script>
}
